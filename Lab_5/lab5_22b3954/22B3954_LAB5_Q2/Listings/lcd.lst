C51 COMPILER V9.60.7.0   LCD                                                               02/13/2024 15:14:04 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\KEIL\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.lst)
                    - TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          
   2          //#include <iostream.h>
   3          #include <at89c5131.h>
   4          #include "lcd.h"
   5          #include <math.h>
   6          
   7          #define EULER_NUM 2.71828
   8          
   9          code unsigned char display_msg1[]="     i/p 1     ";
  10          code unsigned char display_msg2[]="     i/p 2     ";
  11          code unsigned char display_msg3[]="   predict   ";
  12          code unsigned char display_msg4[]=" class 1   ";
  13          code unsigned char display_msg5[]=" class 2   ";
  14          
  15          float w0 = -36;
  16          float w1 = 5;
  17          float w2 = 7;
  18          
  19          float output;
  20          
  21          float inp1 ;
  22          float inp2 ;
  23          
  24          float P_class1 = 0.0;
  25          float P_class2 = 0.0;
  26          
  27          sbit sw1=P1^0;  //Register select
  28          sbit sw2=P1^1;  //Read from or write to register
  29          sbit sw3=P1^2;  //Enable pin of lcd
  30          sbit sw4=P1^3;
  31          
  32          /*
  33          float sigmoid(float n){
  34              return (1/(1 + exp(-n)));
  35          }*/
  36          
  37          int main(){
  38   1        
  39   1        lcd_init();
  40   1        
  41   1        /////////////////////////////////////INPUT 1
  42   1        P1 = 0x0F;                                    //Ready to read
  43   1        lcd_cmd(0x80);
  44   1        lcd_write_string(display_msg1);               // Displaying on LCD
  45   1        msdelay(5000);                                //Giving delay
  46   1        inp1 = P1;                                    //Pulling Tray in
  47   1        
  48   1        /////////////////////////////////////INPUT 2
  49   1        P1 = 0x0F;                                    //Ready to read
  50   1        lcd_cmd(0x80);
  51   1        lcd_write_string(display_msg2);               // Displaying on LCD
  52   1        msdelay(5000);                                //Giving delay
  53   1        inp2 = P1;                                    //Pulling Tray in
  54   1        
C51 COMPILER V9.60.7.0   LCD                                                               02/13/2024 15:14:04 PAGE 2   

  55   1        /////////////////////////////////////Performing MAC
  56   1        output = w0*1;
  57   1        output = output + w1*inp1;
  58   1        output = output + w2*inp2;
  59   1        
  60   1        /////////////////////////////////////Using Sigmoid
  61   1        
  62   1        //P_class1 = 1/(1+ exp(-output))
  63   1        P_class1 = (float)(1.0/(1.0 + exp(-output)));
  64   1        P_class2 = 1.0 - P_class1;
  65   1        
  66   1        /////////////////////////////////////Multipltying
  67   1        
  68   1        lcd_cmd(0x80);                          //Move cursor to 2nd line of LCD
  69   1        msdelay(4);
  70   1        lcd_write_string(display_msg4);
  71   1        //lcd_float(P_class1);
  72   1        
  73   1        lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  74   1        msdelay(4);
  75   1        lcd_write_string(display_msg5);
  76   1        //lcd_float(P_class2);
  77   1        
  78   1        /////////////////////////////////////Checking for Class 1 or Class 2
  79   1      
  80   1        lcd_cmd(0x80);
  81   1        lcd_write_string(display_msg3);               // Displaying on LCD
  82   1        
  83   1        if(output < 0){
  84   2            lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  85   2            msdelay(4);
  86   2            lcd_write_string(display_msg4);
  87   2        }
  88   1        else{
  89   2            lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  90   2            msdelay(4);
  91   2            lcd_write_string(display_msg5);
  92   2        }
  93   1      
  94   1        while(1);
  95   1        return 0;
  96   1        
  97   1      }
*** WARNING C294 IN LINE 95 OF lcd.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    670    ----
   CONSTANT SIZE    =     70    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     32      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
